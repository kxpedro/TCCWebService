// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebService.Repository;

namespace WebService.Migrations
{
    [DbContext(typeof(WebServiceContext))]
    partial class WebServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebService.Models.Contatos", b =>
                {
                    b.Property<int>("ContatosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Celular")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("EstacionamentoID")
                        .HasColumnType("int");

                    b.Property<int?>("MotoristaID")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.HasKey("ContatosID");

                    b.HasIndex("EstacionamentoID");

                    b.HasIndex("MotoristaID");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("WebService.Models.Enderecos", b =>
                {
                    b.Property<int>("EnderecosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("CEP")
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<string>("Complemento")
                        .HasColumnType("text");

                    b.Property<int?>("EstacionamentoID")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<int?>("MotoristaID")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnType("text");

                    b.Property<string>("Rua")
                        .HasColumnType("text");

                    b.HasKey("EnderecosID");

                    b.HasIndex("EstacionamentoID");

                    b.HasIndex("MotoristaID");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("WebService.Models.Estacionamento", b =>
                {
                    b.Property<int>("EstacionamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CNPJ")
                        .HasColumnType("text");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("text");

                    b.HasKey("EstacionamentoID");

                    b.ToTable("Estacionamento");
                });

            modelBuilder.Entity("WebService.Models.EstacionamentoFluxo", b =>
                {
                    b.Property<int>("EstacionamentoFluxoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EstacionamentoID")
                        .HasColumnType("int");

                    b.HasKey("EstacionamentoFluxoID");

                    b.HasIndex("EstacionamentoID");

                    b.ToTable("EstacionamentoFluxo");
                });

            modelBuilder.Entity("WebService.Models.EstacionamentoValores", b =>
                {
                    b.Property<int>("EstacionamentoValoresID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EstacionamentoID")
                        .HasColumnType("int");

                    b.HasKey("EstacionamentoValoresID");

                    b.HasIndex("EstacionamentoID");

                    b.ToTable("EstacionamentoValores");
                });

            modelBuilder.Entity("WebService.Models.Locacao", b =>
                {
                    b.Property<int>("LocacaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<int?>("EstacionamentoID")
                        .HasColumnType("int");

                    b.Property<int?>("MotoristaID")
                        .HasColumnType("int");

                    b.HasKey("LocacaoID");

                    b.HasIndex("EstacionamentoID");

                    b.HasIndex("MotoristaID");

                    b.ToTable("Locacao");
                });

            modelBuilder.Entity("WebService.Models.Motorista", b =>
                {
                    b.Property<int>("MotoristaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("text");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("text");

                    b.HasKey("MotoristaID");

                    b.ToTable("Motorista");
                });

            modelBuilder.Entity("WebService.Models.Contatos", b =>
                {
                    b.HasOne("WebService.Models.Estacionamento", "Estacionamento")
                        .WithMany("Contatos")
                        .HasForeignKey("EstacionamentoID");

                    b.HasOne("WebService.Models.Motorista", "Motorista")
                        .WithMany("Contatos")
                        .HasForeignKey("MotoristaID");
                });

            modelBuilder.Entity("WebService.Models.Enderecos", b =>
                {
                    b.HasOne("WebService.Models.Estacionamento", "Estacionamento")
                        .WithMany("Endereco")
                        .HasForeignKey("EstacionamentoID");

                    b.HasOne("WebService.Models.Motorista", "Motorista")
                        .WithMany("Endereco")
                        .HasForeignKey("MotoristaID");
                });

            modelBuilder.Entity("WebService.Models.EstacionamentoFluxo", b =>
                {
                    b.HasOne("WebService.Models.Estacionamento", "Estacionamento")
                        .WithMany("EstacionamentoFluxo")
                        .HasForeignKey("EstacionamentoID");
                });

            modelBuilder.Entity("WebService.Models.EstacionamentoValores", b =>
                {
                    b.HasOne("WebService.Models.Estacionamento", "Estacionamento")
                        .WithMany("EstacionamentoValores")
                        .HasForeignKey("EstacionamentoID");
                });

            modelBuilder.Entity("WebService.Models.Locacao", b =>
                {
                    b.HasOne("WebService.Models.Estacionamento", "Estacionamento")
                        .WithMany("Locacao")
                        .HasForeignKey("EstacionamentoID");

                    b.HasOne("WebService.Models.Motorista", "Motorista")
                        .WithMany("Locacao")
                        .HasForeignKey("MotoristaID");
                });
#pragma warning restore 612, 618
        }
    }
}
